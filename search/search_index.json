{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome This website is intended to provide some programming exercises to the students who will follow the summer school in robotics in EPFL. During the 4 days of the summer school, the language we will use to program our robots will be python. As there are already many things to learn about robotics only, there will be not much time dedicated to learn the python syntax. So before you join us, make sure you went through the Introduction to python . I am looking forward to meet all of you soon in EPFL.","title":"Welcome"},{"location":"#welcome","text":"This website is intended to provide some programming exercises to the students who will follow the summer school in robotics in EPFL. During the 4 days of the summer school, the language we will use to program our robots will be python. As there are already many things to learn about robotics only, there will be not much time dedicated to learn the python syntax. So before you join us, make sure you went through the Introduction to python . I am looking forward to meet all of you soon in EPFL.","title":"Welcome"},{"location":"about/","text":"About the author After a few years in computer science research, working on very stimulating subjects such as autonomous robotics, augmented reality, 3D reconstruction and machine learning, my pleasure to share my enthusiasm for computer science has been growing. So, from computer science research I made a smooth transition to teaching it. I enjoy computer science because it offers me an infinite source of puzzles, but it's not the only reason. I think that understanding computers and having skills in the field is paramount to understanding our world which is becoming more and more digital. So I wish for everyone to know that the computer science world is open to them. and I hope to give the keys to this world to as many people as possible in the future. Collaborators This summer school would not have been possible without the support of the Service de Promotion de l'Education of EPFL. It also wouldn't have been possible without the trust that Prof. F. Mondada gave me and the opportunities he gave me co-hosting, animating and tinkering in the previous editions of the summer school. Contact Find the information to contact me on my professional page .","title":"About"},{"location":"about/#about-the-author","text":"After a few years in computer science research, working on very stimulating subjects such as autonomous robotics, augmented reality, 3D reconstruction and machine learning, my pleasure to share my enthusiasm for computer science has been growing. So, from computer science research I made a smooth transition to teaching it. I enjoy computer science because it offers me an infinite source of puzzles, but it's not the only reason. I think that understanding computers and having skills in the field is paramount to understanding our world which is becoming more and more digital. So I wish for everyone to know that the computer science world is open to them. and I hope to give the keys to this world to as many people as possible in the future.","title":"About the author"},{"location":"about/#collaborators","text":"This summer school would not have been possible without the support of the Service de Promotion de l'Education of EPFL. It also wouldn't have been possible without the trust that Prof. F. Mondada gave me and the opportunities he gave me co-hosting, animating and tinkering in the previous editions of the summer school.","title":"Collaborators"},{"location":"about/#contact","text":"Find the information to contact me on my professional page .","title":"Contact"},{"location":"python/","text":"Introduction to Python During the upcoming robotics summer school, I'll need you to be confortable with the basics of python programming. I wrote this page using embedded codes to have everyone starting with the bare minimum going from a simple \"Hello world\" script to using variables, loops, conditions and functions. As the program of the summer school will be intense, I'll need you to be confortable with those. Comments and simple instructions For each section of this page I'll use embedded code that allow you to run python scripts without leaving this page, and interact with the code as you wish. So let's go: read the code, try to predict what's going to happen in the terminal (in black), and press the play button. Again, don't hesitate to change the code and press play again to try things out, anything ! For that you can also directly type instructions in the terminal (the black window). Variables and standard operations Computers are so useful to us because they don't always do the same things over and over. It's the same with mobile robots, they can adapt to their environment. This would be impossible to do without taking into account some variations in our programs. To deal with those variations, we use what we call variables. A variable is like a box where we put some information that can vary during the execution of a program. Same here, change the code, make it crash ! (Even more than it already does !) Loops Another way computers and robots change our lives is in their ability to cope with repetitive tasks without being bored. But the programmer who programmed them gets easily bored, so he needs to have a tool to take care of repetitions in his code. That's what loops are for. Exercice 1 Add some lines in the script above to display the 20 first numbers of the Fibonacci sequence. Solution exercice 1 Functions Do you know what assembly language is ? Take a few seconds to have a look at it on wikipedia and try to decipher what the program in the top right image does... That's not the language you want to program every day ! Take some time to contemplate the chance you have to not go through that and instead use python. Well, you have this chance partly thanks to functions. As in mathematics, functions can take arguments and return a value. You should have all by now used the cosine function. Cosine takes onoe parameter, an angle, and returns a value in between -1 and 1. In computer science, functions come in many forms. They can take argument(s) or not. They can return values but they don't have to (in this case we could call it a procedure). Such a tool allow to make our code readable, less repetitive, and combine and build functions with and on one another. That's how, thanks to programmers, your computer can understand some high level languages like python, while at its core it can only understand assembly. Let's see how to use this incredible tool in python. Exercice 2 Define a function with one parameter n that computes and returns the golden ratio using the fibonacci n th and n+1 th numbers. Solution exercice 2 See how simple the exercise is if we use the predefined fibonacci function. The exercise would have been much harder if we had to start from scratch. Conditions In our programs, depending on some variables, sometimes we want to do things, sometimes we don't. To perform such a feat the last ingredient we are missing in our arsenal of tools are conditions. Conditions are quite simple and we use them everyday: Does it rain ? Yes/No => Take an umbrella/Don't. Note that in computer science, conditions are made of: a test resulting in a boolean (True or False), what to do if the test is True, and sometimes what to do if it is not. Exercice 3 Modify the code following the instructions inside it. Solution exercice 3 Conclusion That's all for now. Thanks for going through this introduction and I see you soon to use those new skills to discover the world of mobile robotics.","title":"Introduction to Python"},{"location":"python/#introduction-to-python","text":"During the upcoming robotics summer school, I'll need you to be confortable with the basics of python programming. I wrote this page using embedded codes to have everyone starting with the bare minimum going from a simple \"Hello world\" script to using variables, loops, conditions and functions. As the program of the summer school will be intense, I'll need you to be confortable with those.","title":"Introduction to Python"},{"location":"python/#comments-and-simple-instructions","text":"For each section of this page I'll use embedded code that allow you to run python scripts without leaving this page, and interact with the code as you wish. So let's go: read the code, try to predict what's going to happen in the terminal (in black), and press the play button. Again, don't hesitate to change the code and press play again to try things out, anything ! For that you can also directly type instructions in the terminal (the black window).","title":"Comments and simple instructions"},{"location":"python/#variables-and-standard-operations","text":"Computers are so useful to us because they don't always do the same things over and over. It's the same with mobile robots, they can adapt to their environment. This would be impossible to do without taking into account some variations in our programs. To deal with those variations, we use what we call variables. A variable is like a box where we put some information that can vary during the execution of a program. Same here, change the code, make it crash ! (Even more than it already does !)","title":"Variables and standard operations"},{"location":"python/#loops","text":"Another way computers and robots change our lives is in their ability to cope with repetitive tasks without being bored. But the programmer who programmed them gets easily bored, so he needs to have a tool to take care of repetitions in his code. That's what loops are for. Exercice 1 Add some lines in the script above to display the 20 first numbers of the Fibonacci sequence. Solution exercice 1","title":"Loops"},{"location":"python/#functions","text":"Do you know what assembly language is ? Take a few seconds to have a look at it on wikipedia and try to decipher what the program in the top right image does... That's not the language you want to program every day ! Take some time to contemplate the chance you have to not go through that and instead use python. Well, you have this chance partly thanks to functions. As in mathematics, functions can take arguments and return a value. You should have all by now used the cosine function. Cosine takes onoe parameter, an angle, and returns a value in between -1 and 1. In computer science, functions come in many forms. They can take argument(s) or not. They can return values but they don't have to (in this case we could call it a procedure). Such a tool allow to make our code readable, less repetitive, and combine and build functions with and on one another. That's how, thanks to programmers, your computer can understand some high level languages like python, while at its core it can only understand assembly. Let's see how to use this incredible tool in python. Exercice 2 Define a function with one parameter n that computes and returns the golden ratio using the fibonacci n th and n+1 th numbers. Solution exercice 2 See how simple the exercise is if we use the predefined fibonacci function. The exercise would have been much harder if we had to start from scratch.","title":"Functions"},{"location":"python/#conditions","text":"In our programs, depending on some variables, sometimes we want to do things, sometimes we don't. To perform such a feat the last ingredient we are missing in our arsenal of tools are conditions. Conditions are quite simple and we use them everyday: Does it rain ? Yes/No => Take an umbrella/Don't. Note that in computer science, conditions are made of: a test resulting in a boolean (True or False), what to do if the test is True, and sometimes what to do if it is not. Exercice 3 Modify the code following the instructions inside it. Solution exercice 3","title":"Conditions"},{"location":"python/#conclusion","text":"That's all for now. Thanks for going through this introduction and I see you soon to use those new skills to discover the world of mobile robotics.","title":"Conclusion"}]}